@use "../scss/buttons";
@use "../scss/cards";
@use "../scss/colors";
@use "../scss/spacing";
@use "../scss/text";
@use "./cards/CardView";

.CardsView {
  height: 100%;
  width: 100%;
  overflow: auto;
  padding: spacing.$md;
  user-select: none;
  background-color: #dcdcdc;
}

@mixin CardsView-CardsRow {
  display: flex;
  flex-direction: column;
  /**
  TODO: specify height in ems, adjust SVG accordingly?
  gap: 1em;
  **/
  gap: cards.$card-gap;
}

.CardsView-Cards {
  min-height: 100%;
  min-width: 100%;
}

.CardsView-TreeView {
  display: flex;
  flex-direction: row;
  align-items: start;

  & > * {
    flex: 0 0 auto;
  }
}

.CardsView-TreeView-Parent {
  display: flex;
  flex-direction: row;
  align-items: center;
}

.CardsView-AddChildContainer {
  position: relative;
}

.CardsView-AddChild {
  @include buttons.button-reset;

  font-size: 14px;
  position: absolute;
  top: -20px;
  height: 40px;
  width: 24px;
  background-color: #edf2f7;
  text-align: center;
  border: 1px solid #666;
  border-left: none;
  border-radius: 0 0.5em 0.5em 0;
}

.CardsView-CardList {
  @include CardsView-CardsRow;
}

.CardsView-CardDroppable {
  position: relative;
  width: CardView.$card-width;
}

$droppable-height: 2px;

.CardsView-CardDroppableActive {
  position: absolute;
  height: $droppable-height;
  width: 100%;
  background-color: colors.$primary;

  &--Before {
    top: calc(0px - cards.$card-gap / 2 - $droppable-height / 2);
  }

  &--After {
    top: calc(0px + cards.$card-gap / 2 - $droppable-height / 2);
  }
}
